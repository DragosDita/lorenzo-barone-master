version: 2.1

workflows:
  version: 2
  test-commit-build-deploy:
    jobs:
      - tests
      - commit:
          requires:
            - tests
      - build:
          requires:
            - commit
      - deploy:
          requires:
            - build

jobs:
  tests:
    docker:
      - image: circleci/python:3.10
    steps:
      - checkout
      # Add your test steps here
      - run:
          name: Install dependencies and run tests
          command: |
            echo "Installing dependencies..."
            pip install -r requirements.txt
            python manage.py test lorenzo_barone | tee test-results.txt
            test_result=$?
            if [ $test_result -ne 0 ]; then
              echo "Tests failed. Halting pipeline..."
              circleci step halt
            fi

  commit:
    docker:
      - image: circleci/python:3.10
    steps:
      - checkout
      # Add your commit steps here
      - run:
          name: Commit changes
          command: |
            echo "Committing changes..."
            # Insert your commit commands here

  build:
    docker:
      - image: circleci/python:3.10
    steps:
      - checkout
      # Add your build steps here
      - run:
          name: Build and test
          command: |
            echo "Building and testing..."
            # Insert your build and test commands here

  deploy:
    docker:
      - image: circleci/python:3.10
    steps:
      - checkout
      - run:
          name: Deploy to PythonAnywhere
          command: |
            echo "Deploying to PythonAnywhere..."
            ssh -o StrictHostKeyChecking=no user@dragosSDA.pythonanywhere.com "cd /home/dragosSDA/lorenzo-barone-master && git pull"

      - run:
          name: Get CPU Quota Info
          command: |
            echo "Retrieving CPU quota info from PythonAnywhere API..."
            python get_cpu_quota.py  # Replace with the appropriate filename of your Python script
